<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
<!--  <groupId>com.apigee</groupId>-->
  <groupId>io.apiwiz.threatcheck</groupId>
  <artifactId>threat-callout</artifactId>
  <version>1.0.0</version>
  <name>ThreatCallout</name>
  <url>http://maven.apache.org</url>
  <packaging>jar</packaging>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <apiproxy.java.rsrc.dir>../apiproxy/resources/java</apiproxy.java.rsrc.dir>
    <testng.version>6.8.7</testng.version> <!-- current: 6.9.4 -->
    <guava.version>18.0</guava.version>
  </properties>

  <dependencies>

    <!-- the following are included in Apigee Edge -->
    <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.7</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.14.0-rc2</version>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.10</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.24</version>
    </dependency>


    <!--

    The following 2 jar dependencies from Apigee are not avaiable in any
    public repo.

    You can install them in your machine-local repo (The .m2 cache) via
    these commands:

     mvn install:install-file \
      -Dfile=/Path/To/expressions-1.0.0.jar \
      -DgroupId=com.apigee.edge \
      -DartifactId=expressions \
      -Dversion=1.0.0 \
      -Dpackaging=jar \
      -DgeneratePom=true

     mvn install:install-file \
      -Dfile=/Path/To/message-flow-1.0.0.jar \
      -DgroupId=com.apigee.edge \
      -DartifactId=message-flow \
      -Dversion=1.0.0 \
      -Dpackaging=jar \
      -DgeneratePom=true
    -->

<!--    <dependency>-->
<!--      <groupId>com.apigee.edge</groupId>-->
<!--      <artifactId>message-flow</artifactId>-->
<!--      <version>1.0.0</version>-->
<!--      <scope>compile</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>com.apigee.edge</groupId>-->
<!--      <artifactId>expressions</artifactId>-->
<!--      <version>1.0.0</version>-->
<!--      <scope>compile</scope>-->
<!--    </dependency>-->
      <dependency>
          <groupId>org.testng</groupId>
          <artifactId>testng</artifactId>
          <version>6.9.13.6</version>
          <scope>test</scope>
      </dependency>
    <dependency>
      <groupId>org.jmockit</groupId>
      <artifactId>jmockit</artifactId>
      <version>1.28</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-reflect</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
      <scope>test</scope>
    </dependency>
    <!--
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    -->
    <!-- the following jars must be uploaded to Edge along with this Package
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.4</version>
    </dependency>

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.0.1</version>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
  -->

  </dependencies>
  <build>
    <finalName>${project.artifactId}</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/Icon*</exclude>
          <exclude>**/readme.txt</exclude>
        </excludes>
      </resource>
    </resources>

    <plugins>
    <!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.basedir}/../apiproxy/resources/java</directory>
              <includes>
                <include>**/*.jar</include>
              </includes>
              <excludes>
              </excludes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>


      <plugin>
        <!-- Build an executable JAR -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>com.apiwiz.security.threatcheck.ThreatCallout</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>


      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.10.1</version>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>2.1.5.RELEASE</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <mainClass>
                com.apiwiz.security.threatcheck.ThreatCallout
              </mainClass>
              <finalName>threat-callout</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>



<!--
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <configuration>
              <tasks>
                <copy todir="${apiproxy.java.rsrc.dir}">
                  <fileset dir="${project.build.directory}">
                    <include name="${project.artifactId}.jar"/>

                    <include name="lib/guava-18.0.jar"/>
                  </fileset>
                  <mapper type="flatten"/>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <properties>
            <property>
              <name>junit</name>
              <value>false</value>
            </property>
          </properties>
          <threadCount>1</threadCount>
          <!--<groups>all</groups>-->
          <suiteXmlFiles>
              <file>testng.xml</file>
          </suiteXmlFiles>
        </configuration>
        <dependencies>
          <!--<dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>2.19.1</version>
          </dependency>-->
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-testng</artifactId>
            <version>2.19.1</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
